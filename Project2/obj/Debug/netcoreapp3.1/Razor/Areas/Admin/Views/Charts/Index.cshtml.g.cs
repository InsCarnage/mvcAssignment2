#pragma checksum "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "52971f81f83243d71f6c692fb2698da422b972d9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Charts_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Charts/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\_ViewImports.cshtml"
using Project2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\_ViewImports.cshtml"
using Project2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"52971f81f83243d71f6c692fb2698da422b972d9", @"/Areas/Admin/Views/Charts/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6e3ca17911d6cbbafc701d8a3edeb28ee85bb50e", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Charts_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "52971f81f83243d71f6c692fb2698da422b972d93106", async() => {
                WriteLiteral("\r\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
  
    ViewData["Title"] = "DeskView";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1></h1>\r\n<div class=\"chart\" >\r\n    <canvas id=\"myChart\" ></canvas>\r\n    <script>\r\n        let labels1 = ");
#nullable restore
#line 13 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
                 Write(Html.Raw(ViewBag.lables));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        let data1 = ");
#nullable restore
#line 14 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
               Write(Html.Raw(ViewBag.Data));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        let colors1 = ['#f9069c', '#36CAAB', '#42b3f5', '#b942f5', '#f21f1f','#d2f21f'];
        let myChart1 = document.getElementById(""myChart"");
        let chart1 = new Chart(myChart1, {
            type: ""doughnut"",
            data: {
                labels: labels1,
                datasets: [{
                    data: data1,
                    backgroundColor: colors1
                }]
            },
            options: {
                title: {
                    text: ""Education Fields"",
                    display: true
                },
                maintainAspectRatio: false
            }
        });
    </script>
</div>

<div class=""chart"" >
    <canvas id=""myChart2"" ></canvas>
    <script>
        let labels2 = ");
#nullable restore
#line 40 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
                 Write(Html.Raw(ViewBag.lbl));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        let data2 = ");
#nullable restore
#line 41 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
               Write(Html.Raw(ViewBag.Total));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        let colors2 = ['#f9069c', '#36CAAB', '#42b3f5', '#b942f5', '#f21f1f', '#d2f21f', '#73ffff', '#73ffa9','#ffb473'];
        let myChart2 = document.getElementById(""myChart2"");
        let chart2 = new Chart(myChart2, {
            type: ""bar"",
            data: {
                labels: labels2,
                datasets: [{
                    data: data2,
                    backgroundColor: colors2
                }]
            },
            options: {
                title: {
                    text: ""Job Role"",
                    display: true
                },
                legend: {
                    display: false
                },
                maintainAspectRatio: false
            }
        });

    </script>
</div>

<div class=""chart"">
    <canvas id=""myChart3""></canvas>
    <script>
        let labels3 = ");
#nullable restore
#line 71 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
                 Write(Html.Raw(ViewBag.list));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        let data3 = ");
#nullable restore
#line 72 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
               Write(Html.Raw(ViewBag.Income));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        let colors3 = [];//['#f9069c', '#36CAAB', '#42b3f5', '#b942f5', '#f21f1f', '#d2f21f', '#73ffff', '#73ffa9','#ffb473'];
        let q = [];
        for (let i = 0; i <= labels3.length;i++) {
            q.push({
                x: labels3[i],
                y: data3[i]
            });
        }

        console.log(labels3);
        console.log(data3);
        let myChart3 = document.getElementById(""myChart3"");
        let chart3 = new Chart(myChart3, {
            type: ""scatter"",
            data: {
                datasets: [{
                    labels: 'Scatter Dataset',
                    data: q
                }]
                
            },
            options: {
                title: {
                    text: ""Job Role Monthly Income"",
                    display: true
                },
                scales: {
                    yAxes: [{
                        stacked: true
                        
                    }],
                    xAx");
            WriteLiteral(@"es: [{
                        ticks: {
                            beginAtZero: true,
                            stepSize: 1
                        }
                    }]
                    
                },
                legend: {
                    display: false
                },
                maintainAspectRatio: false
            }
        });

    </script>
</div>

<div class=""chart"">
    <canvas id=""myChart4""></canvas>
    <script>
        let labels4 = ");
#nullable restore
#line 125 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
                 Write(Html.Raw(ViewBag.radarx));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        let data4 = ");
#nullable restore
#line 126 "D:\backup\Backup\MVC TEST\Project2\Project2\Areas\Admin\Views\Charts\Index.cshtml"
               Write(Html.Raw(ViewBag.Department));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        console.log(labels4);
        console.log(data4);


        let myChart4 = document.getElementById(""myChart4"");
        let chart4 = new Chart(myChart4, {
            type: ""radar"",
            data: {
                labels: labels4,
                datasets: [{
                    data: data4,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)'
                }]
            },
            options: {
                title: {
                    text: ""Average Job Roll Monthly Income"",
                    display: true
                },
                scale: {
                    angleLines: {
                        display: true
                    },
                    ticks: {
                        suggestedMin: 10000
                    }
                },
                legend: {
                    display: false
                },
                maintainAspectRatio: false
            }
        });
    </script>
</div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
